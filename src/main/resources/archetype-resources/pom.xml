<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}.grpc</artifactId>
    <version>${version}</version>
    <packaging>war</packaging>
    <name>${artifactId}</name>
    <description>GRPC to Jakarta REST</description>
    <url>https://restful.to.grpc</url>
    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://repository.jboss.org/licenses/apache-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <url>https://github.com/resteasy/restful.example.grpc</url>
    </scm>
    <developers>
        <developer>
            <id>bob</id>
            <name>Bob</name>
            <email>bob@bob.com</email>
            <url>http://bob.com</url>
            <roles>
                <role>project-owner</role>
            </roles>
            <timezone>-5</timezone>
        </developer>
    </developers>
    <distributionManagement>
        <repository>
            <id>jboss-releases-repository</id>
            <name>JBoss Releases Repository</name>
            <url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>jboss-snapshots-repository</id>
            <name>JBoss Snapshots Repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <generate.package>${generate-package}</generate.package>
        <generate.prefix>${generate-prefix}</generate.prefix>
        <resteasy.version>${resteasy-version}</resteasy.version>
        <grpc-bridge.version>${grpc-bridge-version}</grpc-bridge.version>
        <jars></jars>
        <classes></classes>
        <inWildFly>true</inWildFly>
        <release.type>snapshot</release.type>
        
        <!-- applications -->
        <annotations-api.version>1.3.2</annotations-api.version>
        <guava.version>31.1-jre</guava.version>
        <io.grpc.version>1.73.0</io.grpc.version>
        <jakarta.enterprise.cdi-api.version>4.0.1</jakarta.enterprise.cdi-api.version>
        <jakarta.ws.rs-api.version>3.1.0</jakarta.ws.rs-api.version>
        <com.google.protobuf.version>4.31.1</com.google.protobuf.version>
        <protoc.version>4.31.1</protoc.version>
        <protoc-gen-grpc-java.version>1.73.0</protoc-gen-grpc-java.version>
        <failureaccess.version>1.0.2</failureaccess.version>
        
        <!-- plugins -->
        <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
        <exec-maven-plugin.version>3.3.0</exec-maven-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
        <os-maven-plugin.version>1.7.1</os-maven-plugin.version>
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>${artifactId}</artifactId>
            <version>${version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>${jakarta.enterprise.cdi-api.version}</version>
        </dependency>
        <dependency>
            <groupId>dev.resteasy.grpc</groupId>
            <artifactId>grpc-bridge</artifactId>
            <version>${grpc-bridge.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${com.google.protobuf.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${io.grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-api</artifactId>
            <version>${io.grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${io.grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>protoc-gen-grpc-java</artifactId>
            <version>${protoc-gen-grpc-java.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <!-- For @javax.annotation.Generated in *ServiceGrpc -->
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${annotations-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>failureaccess</artifactId>
            <version>${failureaccess.version}</version>
        </dependency>
        <!-- maven plugins -->
        <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${exec-maven-plugin.version}</version>
        </dependency>
    </dependencies>
    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${groupId}</groupId>
                                    <artifactId>${artifactId}</artifactId>
                                    <version>${version}</version>
                                    <classifier>sources</classifier>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.basedir}/src/main/java</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>proto</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/proto</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>java-generated</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/target/generated-sources/protobuf/java/</source>
                                <source>${project.basedir}/target/generated-sources/protobuf/grpc-java/</source>
                                <source>${project.basedir}/src/test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-test-source</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/target/generated-sources/protobuf/grpc-java/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>genproto</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>dev.resteasy.grpc.bridge.generator.protobuf.JavaToProtobufGenerator</mainClass>
                            <cleanupDaemonThreads>false</cleanupDaemonThreads>
                            <arguments>
                                <argument>${project.basedir}</argument>
                                <argument>${generate.package}</argument>
                                <argument>${generate.package}</argument>
                                <argument>${generate-prefix}</argument>
                            </arguments>
                            <systemProperties>
                                <systemProperty>
                                    <key>exec.cleanupDaemonThreads</key>
                                    <value>false</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>jars</key>
                                    <value>${jars}</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>classes</key>
                                    <value>${classes}</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>genprotobuf</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>dev.resteasy.grpc.bridge.generator.protobuf.JavabufTranslatorGenerator</mainClass>
                            <cleanupDaemonThreads>false</cleanupDaemonThreads>
                            <arguments>
                                <argument>${project.basedir}/target/generated-sources/protobuf/grpc-java</argument>
                                <argument>${generate.package}.${generate-prefix}</argument>
                                <argument>${generate-prefix}</argument>
                                <argument>${project.basedir}/src/main/proto/${generate-prefix}.proto</argument>
                                <argument>${project.build.directory}</argument>
                            </arguments>
                            <systemProperties>
                                <systemProperty>
                                    <key>exec.cleanupDaemonThreads</key>
                                    <value>false</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>exec.args</key>
                                    <value>%classpath</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>reader-writer</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>dev.resteasy.grpc.bridge.generator.protobuf.ReaderWriterGenerator</mainClass>
                            <cleanupDaemonThreads>false</cleanupDaemonThreads>
                            <arguments>
                                <argument>${project.basedir}/target/generated-sources/protobuf/grpc-java</argument>
                                <argument>${generate.package}.${generate-prefix}</argument>
                                <argument>${generate-prefix}</argument>
                                <argument>${project.basedir}</argument>
                                <argument>${project.basedir}/src/main/proto/${generate-prefix}.proto</argument>
                                <argument>${generate-package}</argument>
                            </arguments>
                            <systemProperties>
                                <systemProperty>
                                    <key>exec.cleanupDaemonThreads</key>
                                    <value>false</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>genGRPC</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>dev.resteasy.grpc.bridge.generator.ServiceGrpcExtender</mainClass>
                            <cleanupDaemonThreads>false</cleanupDaemonThreads>
                            <arguments>
                                <argument>${generate-prefix}</argument>
                                <argument>${generate-prefix}Servlet</argument>
                                <argument>${generate.package}</argument>
                            </arguments>
                            <systemProperties>
                                <systemProperty>
                                    <key>exec.cleanupDaemonThreads</key>
                                    <value>false</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>buildjar</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${basedir}/src/main/resources/buildjar</executable>
                            <commandlineArgs>${groupId} ${artifactId}.grpc ${version}</commandlineArgs>
                            <cleanupDaemonThreads>true</cleanupDaemonThreads>
                        </configuration>
                    </execution>
                    <execution>
                        <id>deployjar</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${basedir}/src/main/resources/deployjar</executable>
                            <commandlineArgs>${groupId} ${artifactId}.grpc ${version} ${release.type}</commandlineArgs>
                            <cleanupDaemonThreads>true</cleanupDaemonThreads>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>${protobuf-maven-plugin.version}</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:${protoc.version}:exe:${os.detected.classifier}</protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:${protoc-gen-grpc-java.version}:exe:${os.detected.classifier}</pluginArtifact>
                    <clearOutputDirectory>false</clearOutputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>compile_proto</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>install</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>chmod</id>
                        <phase>package</phase>
                        <configuration>
                            <target name="chmod">
                                <chmod file="${project.basedir}/src/main/resources/buildjar" perm="755" />
                                <chmod file="${project.basedir}/src/main/resources/deployjar" perm="755" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>wildfly</id>
            <activation>
                <property>
                    <name>inWildFly</name>
                    <value>!false</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${maven-war-plugin.version}</version>
                        <configuration>
                            <overlays>
                                <overlay>
                                    <groupId>${groupId}</groupId>
                                    <artifactId>${artifactId}</artifactId>
                                    <excludes>
                                        <exclude>**/*</exclude>
                                    </excludes>
                                </overlay>
                            </overlays>
                            <archive>
                                <manifestEntries>
                                    <!--Dependencies>org.wildfly.extension.grpc,dev.resteasy.grpc.grpc-bridge-runtime</Dependencies-->
                                    <Dependencies>org.wildfly.extension.grpc,io.grpc-all</Dependencies>
                                </manifestEntries>
                            </archive>
                            <webResources>
                                <resource>
                                    <directory>${basedir}/target/test-classes</directory>
                                    <targetPath>WEB-INF/classes</targetPath>
                                </resource>
                            </webResources>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                            <packagingIncludes>
                        WEB-INF/classes/**/*,
                        WEB-INF/test-classes/**/*,
                        META-INF/beans.xml,
                        META-INF/MANIFEST.MF,
                        WEB-INF/lib/grpc-bridge-runtime-${grpc-bridge-version}.jar
                     </packagingIncludes>
                            <packagingExcludes>
                        WEB-INF/lib/*grpc-bridge-${resteasy.version}.jar,
                     </packagingExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>not-wildfly</id>
            <activation>
                <property>
                    <name>inWildFly</name>
                    <value>false</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${maven-war-plugin.version}</version>
                        <configuration>
                            <overlays>
                                <overlay>
                                    <groupId>${groupId}</groupId>
                                    <artifactId>${artifactId}</artifactId>
                                    <excludes>
                                        <exclude>**/*</exclude>
                                    </excludes>
                                </overlay>
                            </overlays>
                            <webResources>
                                <resource>
                                    <directory>${basedir}/target/test-classes</directory>
                                    <targetPath>WEB-INF/classes</targetPath>
                                </resource>
                            </webResources>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                            <packagingIncludes>
                        WEB-INF/lib/*grpc*,
                        WEB-INF/lib/*guava*,
                        WEB-INF/lib/perfmark*,
                        WEB-INF/lib/*protobuf*,
                        WEB-INF/classes/**/*,
                        WEB-INF/test-classes/**/*
                     </packagingIncludes>
                            <packagingExcludes>
                        WEB-INF/lib/*grpc-bridge-${resteasy.version}.jar,
                     </packagingExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
